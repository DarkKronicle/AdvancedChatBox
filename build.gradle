plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
	id "io.freefair.lombok" version "8.4"
}

apply from: 'https://raw.githubusercontent.com/DarkKronicle/GradleScripts/main/gradle/publish.gradle'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

repositories {
	mavenCentral()
	maven { url 'https://masa.dy.fi/maven' }
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation "fi.dy.masa.malilib:malilib-fabric-${project.minecraft_version}:${project.malilib_version}"
	modImplementation "io.github.darkkronicle:AdvancedChatCore:${project.minecraft_version}-${project.advancedchat_version}"
	// only used to build the mod locally

	modCompileOnly "org.mariuszgromada.math:MathParser.org-mXparser:${project.mxparser_version}"

	implementation "org.languagetool:language-en:5.5"
	// Transitive
	include "org.languagetool:language-en:5.5"
	include "org.languagetool:languagetool-core:5.5"
	include group: 'net.loomchild', name: 'segment', version: '2.0.3'
	include group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	include group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	include group: 'org.jetbrains.intellij.deps', name: 'trove4j', version: '1.0.20200330'
	include group: 'javax.measure', name: 'unit-api', version: '2.1.3'
	include group: 'tech.units', name: 'indriya', version: '1.3'
	include group: 'tech.uom.lib', name: 'uom-lib-common', version: '1.1'
	include group: 'org.carrot2', name: 'morfologik-fsa', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-fsa-builders', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-speller', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-stemming', version: '2.1.7'
	include group: 'org.apache.opennlp', name: 'opennlp-tools', version: '1.9.3'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-chunk-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-postag-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-tokenize-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-chunk-models', version: '1.5'
	include group: 'com.carrotsearch', name: 'hppc', version: '0.9.0'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

tasks.register('sourcesJar', Jar) {
	dependsOn classes
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from "LICENSE.txt"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}
