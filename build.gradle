plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
	id "io.freefair.lombok" version "6.0.0-m2"
	id "com.diffplug.spotless" version "5.17.1"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

repositories {
	mavenCentral()
	maven { url 'https://masa.dy.fi/maven' }
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation "fi.dy.masa.malilib:malilib-fabric-1.19.0:${project.malilib_version}"
	modImplementation "com.github.Kale-Ko:AdvancedChatCore:${project.advancedchat_version}"

	implementation "org.languagetool:language-de:${project.language_tool_version}"
	implementation "org.languagetool:language-en:${project.language_tool_version}"
	implementation "org.languagetool:language-ru:${project.language_tool_version}"
	implementation "org.languagetool:language-zh:${project.language_tool_version}"
	implementation "org.languagetool:language-pt:${project.language_tool_version}"
	implementation "org.languagetool:language-fr:${project.language_tool_version}"
	implementation "org.languagetool:language-nl:${project.language_tool_version}"
	implementation "org.languagetool:language-pl:${project.language_tool_version}"
	implementation "org.languagetool:language-es:${project.language_tool_version}"
	implementation "org.languagetool:language-it:${project.language_tool_version}"
	implementation "org.languagetool:language-uk:${project.language_tool_version}"
	implementation "org.languagetool:language-ja:${project.language_tool_version}"
	// Transitive
	include "org.languagetool:language-de:${project.language_tool_version}"
	include "org.languagetool:language-en:${project.language_tool_version}"
	include "org.languagetool:language-ru:${project.language_tool_version}"
	include "org.languagetool:language-zh:${project.language_tool_version}"
	include "org.languagetool:language-pt:${project.language_tool_version}"
	include "org.languagetool:language-fr:${project.language_tool_version}"
	include group: 'org.languagetool', name: 'french-pos-dict', version: '0.5'

	include "org.languagetool:language-nl:${project.language_tool_version}"
	include "org.languagetool:language-pl:${project.language_tool_version}"
	include "org.languagetool:language-es:${project.language_tool_version}"
	include "org.languagetool:language-it:${project.language_tool_version}"
	include "org.languagetool:language-uk:${project.language_tool_version}"
	include "org.languagetool:language-ja:${project.language_tool_version}"
	include group: 'com.ibm.icu', name: 'icu4j', version: '71.1'
	include group: 'com.github.lucene-gosen', name: 'lucene-gosen', version: '6.2.1'

	include "org.languagetool:languagetool-core:${project.language_tool_version}"
	
	
	//German and English
	include group: 'tech.uom.lib', name: 'uom-lib-common', version: '1.1'
	include group: 'org.apache.opennlp', name: 'opennlp-tools', version: '1.9.3'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-chunk-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-postag-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-tokenize-models', version: '1.5'
	include group: 'edu.washington.cs.knowitall', name: 'opennlp-chunk-models', version: '1.5'
	include group: 'com.carrotsearch', name: 'hppc', version: '0.9.0'
	include group: 'de.danielnaber', name: 'german-pos-dict', version: '1.2.2'
	include group: 'de.danielnaber', name: 'jwordsplitter', version: '4.5'
	include group: 'edu.washington.cs.knowitall', name: 'openregex', version: '1.1.1'
	include group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

	include group: 'io.grpc', name: 'grpc-netty-shaded', version: '1.42.1'
	include group: 'io.grpc', name: 'grpc-protobuf', version: '1.42.1'
	include group: 'io.grpc', name: 'grpc-stub', version: '1.42.1'
	include group: 'io.grpc', name: 'grpc-api', version: '1.45.1'
	include group: 'io.grpc', name: 'grpc-context', version: '1.45.1'

	include group: 'org.carrot2', name: 'morfologik-fsa', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-fsa-builders', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-speller', version: '2.1.7'
	include group: 'org.carrot2', name: 'morfologik-stemming', version: '2.1.7'
	include group: 'net.loomchild', name: 'segment', version: '2.0.3'
	include group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	include group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	include group: 'org.jetbrains.intellij.deps', name: 'trove4j', version: '1.0.20200330'
	include group: 'javax.measure', name: 'unit-api', version: '2.1.3'
	include group: 'tech.units', name: 'indriya', version: '1.3'

	include group: 'com.hankcs', name: 'aho-corasick-double-array-trie', version: '1.2.2'
	include group: 'com.gitlab.dumonts', name: 'hunspell', version: '1.1.1'
	include group: 'com.nativelibs4java', name: 'bridj', version: '0.7.0'
	// Chinese
	include group: 'com.google.code', name: 'cjftransform', version: '1.0.1'
	include group: 'com.hankcs', name: 'hanlp', version: 'portable-1.7.8'
	// Spanish
	include group: 'org.softcatala', name: 'spanish-pos-dict', version: '1.3'
	// Ukrainian
	include group: 'ua.net.nlp', name: 'morfologik-ukrainian-lt', version: '5.5.1'
 } 

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from "LICENSE.txt"
}

spotless {
	ratchetFrom 'origin/main'
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		target 'src/*/java/**/*.java'
		removeUnusedImports()
		licenseHeaderFile "HEADER.txt"
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
